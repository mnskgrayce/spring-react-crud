{"ast":null,"code":"var _jsxFileName = \"/Users/minesk/Projects/spring-react-crud/frontend/src/components/StudentForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function StudentForm({\n  preloadedData\n}) {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: preloadedData\n  });\n\n  const onSubmit = async data => {\n    if (!preloadedData) {\n      axios.post(`/api/students`, data).then(response => {\n        console.log(\"Post One:\", data);\n        console.log(response.status, response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      axios.put(`/api/student/${preloadedData.id}`, data).then(response => {\n        console.log(\"Post One:\", data);\n        console.log(response.status, response.data);\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Full Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"fullName\",\n          ...register(\"fullName\", {\n            required: true,\n            pattern: /^[A-Za-z]+(\\s[A-Za-z]+)+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Grade\", /*#__PURE__*/_jsxDEV(\"select\", { ...register(\"grade\"),\n          children: Array.from({\n            length: 12\n          }, (_, i) => i + 1).map(value => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: value,\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Parent Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"parentName\",\n          ...register(\"parentName\", {\n            required: true,\n            pattern: /^[A-Za-z]+(\\s[A-Za-z]+)+$/i\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"address\",\n          ...register(\"address\", {\n            required: true,\n            minLength: 10,\n            maxLength: 20\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"phone\",\n          ...register(\"phone\", {\n            required: true,\n            minLength: 10,\n            maxLength: 20,\n            pattern: /^[0-9]+$/\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          ...register(\"email\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StudentForm, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n\n_c = StudentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentForm\");","map":{"version":3,"sources":["/Users/minesk/Projects/spring-react-crud/frontend/src/components/StudentForm.js"],"names":["React","axios","useForm","StudentForm","preloadedData","register","handleSubmit","defaultValues","onSubmit","data","post","then","response","console","log","status","catch","error","put","id","required","pattern","Array","from","length","_","i","map","value","minLength","maxLength"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nexport function StudentForm({ preloadedData }) {\n  const { register, handleSubmit } = useForm({ defaultValues: preloadedData });\n\n  const onSubmit = async (data) => {\n    if (!preloadedData) {\n      axios\n        .post(`/api/students`, data)\n        .then((response) => {\n          console.log(\"Post One:\", data);\n          console.log(response.status, response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    } else {\n      axios\n        .put(`/api/student/${preloadedData.id}`, data)\n        .then((response) => {\n          console.log(\"Post One:\", data);\n          console.log(response.status, response.data);\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"\">\n        <label>\n          Full Name\n          <input\n            name=\"fullName\"\n            {...register(\"fullName\", {\n              required: true,\n              pattern: /^[A-Za-z]+(\\s[A-Za-z]+)+$/i,\n            })}\n          />\n        </label>\n      </div>\n\n      <div className=\"\">\n        <label>\n          Grade\n          <select {...register(\"grade\")}>\n            {Array.from({ length: 12 }, (_, i) => i + 1).map((value) => (\n              <option key={value} value={value}>\n                {value}\n              </option>\n            ))}\n          </select>\n        </label>\n      </div>\n\n      <div className=\"\">\n        <label>\n          Parent Name\n          <input\n            name=\"parentName\"\n            {...register(\"parentName\", {\n              required: true,\n              pattern: /^[A-Za-z]+(\\s[A-Za-z]+)+$/i,\n            })}\n          />\n        </label>\n      </div>\n\n      <div className=\"\">\n        <label>\n          Address\n          <input\n            name=\"address\"\n            {...register(\"address\", {\n              required: true,\n              minLength: 10,\n              maxLength: 20,\n            })}\n          />\n        </label>\n      </div>\n\n      <div className=\"\">\n        <label>\n          Phone Number\n          <input\n            name=\"phone\"\n            {...register(\"phone\", {\n              required: true,\n              minLength: 10,\n              maxLength: 20,\n              pattern: /^[0-9]+$/,\n            })}\n          />\n        </label>\n      </div>\n\n      <div className=\"\">\n        <label>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            {...register(\"email\", { required: true })}\n          />\n        </label>\n      </div>\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}